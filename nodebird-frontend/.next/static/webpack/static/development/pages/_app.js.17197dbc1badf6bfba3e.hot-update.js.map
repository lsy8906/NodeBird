{"version":3,"file":"static/webpack/static/development/pages/_app.js.17197dbc1badf6bfba3e.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport PropTypes from 'prop-types';\n\nconst TextInput = ({ value }) => {\n    return (\n        <div>{value}</div>\n    )\n}\n\nTextInput.propTypes = {\n    value: PropTypes.string,\n}\n\nexport const useInput = () => {\n    const [value, setter] = useState('');\n    const handler = useCallback((e) => {\n        setter(e.target.value);\n    }, []);\n    return [value, handler];\n};\n\nconst SignUp = () => {\n    const [passwordCheck, setPasswordCheck] = useState('');\n    const [term, setTerm] = useState(false);\n    const [passwordError, setPasswordError] = useState(false);\n    const [termError, setTermError] = useState(false);\n    const [id, onChangeId] = useInput('');\n    const [nick, onChangeNick] = useInput('');\n    const [password, onChangePassword] = useInput('');\n\n    const onSubmit = useCallback((e) => {\n        e.preventDefault();\n        if (password !== passwordCheck) {\n            return setPasswordError(true);\n        }\n        if (!term) {\n            return setTermError(true);\n        }\n    }, [password, passwordCheck, term]);\n\n    const onChangePasswordCheck = useCallback((e) => {\n        setPasswordError(e.target.value !== password);\n        setPasswordCheck(e.target.value);\n    }, [password]);\n    const onChangeTerm = useCallback((e) => {\n        setTermError(false);\n        setTerm(e.target.checked);\n    }, []);\n\n    return (\n        <>\n            <TextInput value={\"프롭타입스 연습\"} />\n            <Form onSubmit={onSubmit}>\n                <div>\n                    <label htmlFor=\"user-id\">아이디</label>\n                    <br />\n                    <Input name=\"user-id\" value={id} onChange={onChangeId} required />\n                </div>\n                <div>\n                    <label htmlFor=\"user-nick\">닉네임</label>\n                    <br />\n                    <Input name=\"user-nick\" value={nick} onChange={onChangeNick} required />\n                </div>\n                <div>\n                    <label htmlFor=\"user-password\">비밀번호</label>\n                    <br />\n                    <Input name=\"user-password\" type=\"password\" value={password} onChange={onChangePassword} required />\n                </div>\n                <div>\n                    <label htmlFor=\"user-password-check\">비밀번호확인</label>\n                    <br />\n                    <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} onChange={onChangePasswordCheck} required />\n                    {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</div>}\n                </div>\n                <div>\n                    <Checkbox name=\"user-term\" value={term} onChange={onChangeTerm}>약관동의</Checkbox>\n                    {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div>}\n                </div>\n                <div>\n                    <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\n                </div>\n            </Form>\n        </>\n    )\n}\n\nexport default SignUp;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}